<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="member">
  	
  	<!-- 멤버 추출 -->
	<select id="getMember" resultType="MemberVO">
   	
   		SELECT *
   		FROM MEMBER
   		WHERE MEMBER_ID = #{memberId}
   	
   </select>
   
    <!-- 로그인 -->
    <select id="login" parameterType="map" resultType="MemberVO">
    	SELECT *
    	FROM MEMBER
    	WHERE MEMBER_LOGID = #{id}
    	AND MEMBER_PASSWORD = #{pw}
    </select>
   
   <!-- 아이디 찾기 -->
     <select id="findId" parameterType="map" resultType="string">
     	SELECT MEMBER_LOGID
		FROM MEMBER
		WHERE MEMBER_NAME = #{name}
		AND TO_CHAR (TO_DATE(MEMBER_BIRTHDAY, 'YYYY-MM-DD'), 'YYMMDD') = #{birthday}
		AND MEMBER_PHONENUM = #{number}
     </select>
     
     <!-- 비밀번호 찾기 -->
     <select id="findPwd" parameterType="map" resultType="string">
     	SELECT MEMBER_PASSWORD
		FROM MEMBER
		WHERE MEMBER_LOGID = #{id}
		AND TO_CHAR (TO_DATE(MEMBER_BIRTHDAY, 'YYYY-MM-DD'), 'YYMMDD') = #{birthday}
		AND MEMBER_PHONENUM = #{number}
     </select>
     
    <!-- 일반 사용자 전체 데이터 조회 -->
    <select id="getMemberList" resultType="MemberVO">
    	SELECT *
		FROM MEMBER
		WHERE MEMBER_TYPE = 'Member'
    </select>
   
   
   <!-- 2. 회원 관리 -->
    <!-- 전체 회원수 (일반 회원 + 멤버십 회원) -->
    <select id="getTotalMemberCount" resultType="int">
    	SELECT COUNT(*) 
		FROM MEMBER 
		WHERE MEMBER_TYPE = 'Member'
    </select>
   
   
    <!-- 일반 회원수 -->
    <select id="MemberCount" resultType="int">
	    SELECT COUNT(*) 
		FROM MEMBER m
		LEFT JOIN MEMBERSHIP s ON m.MEMBER_ID = s.MEMBER_ID
		WHERE s.MEMBER_ID IS NULL
		AND m.MEMBER_TYPE = 'Member'
    </select>
    
    <!-- 전체 회원에서 회원 조회 -->
    <select id="searchMember" parameterType="map" resultType="MemberAndMembershipVO">
		SELECT m.*, s.* 
		FROM MEMBER m
		LEFT JOIN MEMBERSHIP s ON m.MEMBER_ID = s.MEMBER_ID
		WHERE MEMBER_TYPE = 'Member'
		AND m.MEMBER_NAME = #{name}
		AND m.MEMBER_BIRTHDAY= #{birthday}
		AND m.MEMBER_PHONENUM = #{phoneNum}
    </select>
    
     <!-- 회원 존재여부 체크 쿼리 -->
    <select id="checkMemberExists" parameterType="string" resultType="int">
	    SELECT COUNT(*)
	    FROM MEMBER
	    WHERE MEMBER_BIRTHDAY = #{memberBirthday}
	    AND MEMBER_PHONENUM = #{memberPhonenum}
	    AND MEMBER_NAME = #{memberName}
	</select>
	
	
	<!-- 닉네임 중복 체크 쿼리 -->
    <select id="checkNicknameExists" parameterType="string" resultType="int">
        SELECT COUNT(*)
        FROM MEMBER
        WHERE MEMBER_NICKNAME = #{memberNickname}
    </select>
    
    
    <!-- 회원가입 정보 DB입력 쿼리 -->
    <insert id="insertMember" parameterType="com.lookat.dto.MemberDTO">
        INSERT INTO MEMBER
        (MEMBER_ID, MEMBER_NAME, MEMBER_SEX, MEMBER_AGE, MEMBER_NICKNAME,
         MEMBER_BIRTHDAY, MEMBER_TYPE, MEMBER_LOGID, MEMBER_PASSWORD, MEMBER_PHONENUM)
        VALUES (MEMBER_ID_SEQ.NEXTVAL, #{memberName}, #{memberSex}, #{memberAge}, #{memberNickname},
                #{memberBirthday}, 'Member' , #{memberLogId}, #{memberPassword}, #{memberPhonenum})
    </insert>
   
   <!-- 비밀번호 수정 -->	
	<update id ="updatePassword" parameterType="HashMap">
	
		UPDATE MEMBER
		SET MEMBER_PASSWORD = #{updatePassword}
	   	WHERE MEMBER_ID= #{memberId}
		
	</update>
	
	<!-- 이름 수정 -->	
	<update id ="updateName" parameterType="HashMap" >
	
		UPDATE MEMBER
		SET MEMBER_NAME = #{updateName}
	   	WHERE MEMBER_ID= #{memberId}
		
	</update>
	
	<!-- 닉네임 수정 -->	
	<update id ="updateNickName" parameterType="HashMap" >
	
		UPDATE MEMBER
		SET MEMBER_NICKNAME = #{updateNickName}
	    WHERE MEMBER_ID= #{memberId}
		
	</update>
	
	<!-- 닉네임 중복체크 -->	
	<select id ="checkNickName" parameterType="string" resultType="MemberVO" >
	
	    SELECT *
		FROM MEMBER
		WHERE MEMBER_NICKNAME IN (#{checkNickName})
		
	</select>
	
	
	<!-- 생년월일 수정 -->	
	<update id ="updateBirthday" parameterType="HashMap" >
	
		UPDATE MEMBER
		SET MEMBER_BIRTHDAY = #{updateBirthday}
	    WHERE MEMBER_ID= #{memberId}
		
	</update>
	
	<!-- 전화번호 수정 -->	
	<update id ="updatePhone" parameterType="HashMap" >
	
		UPDATE MEMBER
		SET MEMBER_PHONENUM = #{updatePhone}
	   	WHERE MEMBER_ID= #{memberId}
		
	</update>
	
	<!-- 회원탈퇴 -->
	<delete id ="delete" parameterType="int" >
	    DELETE 
		FROM MEMBER
		WHERE MEMBER_ID = #{memberId}
	</delete>
	
	
	<!-- 여성 회원수 -->
	<select id="getFemaleCount" resultType="int">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE MEMBER_SEX = 'F'
		AND MEMBER_TYPE = 'Member'
		GROUP BY MEMBER_SEX
	</select>
	
	<!-- 남성 회원수 -->
	<select id="getMaleCount" resultType="int">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE MEMBER_SEX = 'M'
		AND MEMBER_TYPE = 'Member'
		GROUP BY MEMBER_SEX
	</select>
   
</mapper>

